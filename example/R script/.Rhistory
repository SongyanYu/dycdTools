sim.start="2002-01-23",sim.end="2016-12-31",
plot.start = "2002-01-23",
plot.end="2002-12-31",
min.depth=0,
max.depth=33,
by.value=0.5,
ylabel="Temperature \u00B0C")
ts.plot<-function(sim=temp.interpolated,
obs=obs.temp,
file_name,
target.depth=c(1,6,12,30),
sim.start="2017-06-06",
sim.end="2020-02-29",
plot.start="2017-06-06",
plot.end="2020-02-29",
min.depth=0,max.depth=33,by.value=0.5,
ylabel="Temperature \u00B0C",
height=7,
width=11){
#---
# 1. simulation period
#---
sim.date<-seq.Date(from = as.Date(sim.start,format="%Y-%m-%d"),
to = as.Date(sim.end,format="%Y-%m-%d"),
by="day")
#---
# 2. combine sim with obs by Date and Depth
#---
sim.temp<-as.data.frame(sim)
colnames(sim.temp)<-sim.date
sim.temp$Depth<-seq(min.depth,max.depth,by=by.value)
temp.both<-sim.temp%>%
pivot_longer(-Depth,names_to = "Date",values_to = "sim")%>%
mutate(Date=as.Date(Date,format="%Y-%m-%d"))%>%
left_join(.,obs,by=c("Date","Depth"))%>%
filter(Date>=plot.start&Date<=plot.end)
colnames(temp.both)[4]<-"obs"
#---
# 3. time series plot sim vs. obs, faceted by Depth
#---
temp.both%>%
filter(Depth %in% target.depth)%>%
ggplot()+
geom_line(aes(x=Date,y=sim))+
geom_point(aes(x=Date,y=obs),col="red")+
facet_grid(~Depth)+
theme_classic()+
labs(y=ylabel)+
ggsave(filename = file_name,height = height,width = width)
}
#---
# time serise plot
#---
ts.plot(sim = temp.interpolated,
obs = obs.temp,
file_name=paste0("../R figures/TS_temp.png"),
target.depth=c(0,14,30),
sim.start="2002-01-23",sim.end="2016-12-31",
plot.start = "2002-01-23",
plot.end="2002-12-31",
min.depth=0,
max.depth=33,
by.value=0.5,
ylabel="Temperature \u00B0C",
height = 4,
width = 7)
#---
# time serise plot
#---
ts.plot(sim = temp.interpolated,
obs = obs.temp,
file_name=paste0("../R figures/TS_temp.png"),
target.depth=c(0,14,30),
sim.start="2002-01-23",sim.end="2016-12-31",
plot.start = "2002-01-23",
plot.end="2002-12-31",
min.depth=0,
max.depth=33,
by.value=0.5,
ylabel="Temperature \u00B0C",
height = 4,
width = 8)
#---
# time serise plot
#---
ts.plot(sim = temp.interpolated,
obs = obs.temp,
file_name=paste0("../R figures/TS_temp.png"),
target.depth=c(0,14,30),
sim.start="2002-01-23",sim.end="2016-12-31",
plot.start = "2002-01-23",
plot.end="2002-12-31",
min.depth=0,
max.depth=33,
by.value=0.5,
ylabel="Temperature \u00B0C",
height = 4,
width = 9)
#---
# time serise plot
#---
ts.plot(sim = temp.interpolated,
obs = obs.temp,
file_name=paste0("../R figures/TS_temp.png"),
target.depth=c(0,14,30),
sim.start="2002-01-23",sim.end="2016-12-31",
plot.start = "2002-01-23",
plot.end="2002-12-31",
min.depth=0,
max.depth=33,
by.value=0.5,
ylabel="Temperature \u00B0C",
height = 4,
width = 10)
#---
# time serise plot
#---
ts.plot(sim = temp.interpolated,
obs = obs.temp,
file_name=paste0("../R figures/TS_temp.png"),
target.depth=c(0,14,30),
sim.start="2002-01-23",sim.end="2016-12-31",
plot.start = "2002-01-23",
plot.end="2002-12-31",
min.depth=0,
max.depth=33,
by.value=0.5,
ylabel="Temperature \u00B0C",
height = 4,
width = 11)
#---
# time serise plot
#---
ts.plot(sim = temp.interpolated,
obs = obs.temp,
file_name=paste0("../R figures/TS_temp.png"),
target.depth=c(0,14,30),
sim.start="2002-01-23",sim.end="2016-12-31",
plot.start = "2002-01-23",
plot.end="2002-12-31",
min.depth=0,
max.depth=33,
by.value=0.5,
ylabel="Temperature \u00B0C",
height = 4,
width = 13)
#---
# time serise plot
#---
ts.plot(sim = temp.interpolated,
obs = obs.temp,
file_name=paste0("../R figures/TS_temp.png"),
target.depth=c(0,14,30),
sim.start="2002-01-23",sim.end="2016-12-31",
plot.start = "2002-01-23",
plot.end="2012-12-31",
min.depth=0,
max.depth=33,
by.value=0.5,
ylabel="Temperature \u00B0C",
height = 4,
width = 13)
#---
# time serise plot
#---
ts.plot(sim = temp.interpolated,
obs = obs.temp,
file_name=paste0("../R figures/TS_temp.png"),
target.depth=c(1,14,30),
sim.start="2002-01-23",sim.end="2016-12-31",
plot.start = "2002-01-23",
plot.end="2012-12-31",
min.depth=0,
max.depth=33,
by.value=0.5,
ylabel="Temperature \u00B0C",
height = 4,
width = 13)
#---
# time serise plot
#---
ts.plot(sim = temp.interpolated,
obs = obs.temp,
file_name=paste0("../R figures/TS_temp.png"),
target.depth=c(1,14,30),
sim.start="2002-01-23",sim.end="2016-12-31",
plot.start = "2002-01-23",
plot.end="2012-12-31",
min.depth=0,
max.depth=33,
by.value=0.5,
ylabel="Temperature \u00B0C",
height = 4,
width = 7)
scatter.plot<-function(sim=temp.interpolated,
obs=obs.temp,
start.date="2017-06-06",end.date="2020-02-29",
file_name,
min.depth=0,max.depth,by.value,
height=4,
width=7){
#---
# 1. simulation period
#---
sim.date<-seq.Date(from = as.Date(start.date,format="%Y-%m-%d"),
to = as.Date(end.date,format="%Y-%m-%d"),
by="day")
#---
# 2. combine sim with obs by Date and Depth
#---
sim.temp<-as.data.frame(sim)
colnames(sim.temp)<-sim.date
sim.temp$Depth<-seq(min.depth,max.depth,by=by.value)
temp.both<-sim.temp%>%
pivot_longer(-Depth,names_to = "Date",values_to = "sim")%>%
mutate(Date=as.Date(Date,format="%Y-%m-%d"))%>%
right_join(.,obs,by=c("Date","Depth"))
colnames(temp.both)[4]<-"obs"
#---
# 3.report two objective functions' value and scatter plot sim vs. obs
#---
print(NSE(temp.both$sim,obs=temp.both$obs))   #NSE
print(sqrt(mean((temp.both$sim-temp.both$obs)^2,na.rm = TRUE)))  # RMSE
temp.both%>%
ggplot(aes(x=obs,y=sim,colour=Depth))+
geom_point()+
geom_abline(color="red")+
scale_color_gradientn(colors = brewer.pal(11, "Spectral"), name = "Depth")+
xlab("Observed")+
ylab("Simulated")+
theme_classic()+
ggsave(filename = file_name)
}
scatter.plot<-function(sim=temp.interpolated,
obs=obs.temp,
start.date="2017-06-06",end.date="2020-02-29",
file_name,
min.depth=0,max.depth,by.value,
height=4,
width=7){
#---
# 1. simulation period
#---
sim.date<-seq.Date(from = as.Date(start.date,format="%Y-%m-%d"),
to = as.Date(end.date,format="%Y-%m-%d"),
by="day")
#---
# 2. combine sim with obs by Date and Depth
#---
sim.temp<-as.data.frame(sim)
colnames(sim.temp)<-sim.date
sim.temp$Depth<-seq(min.depth,max.depth,by=by.value)
temp.both<-sim.temp%>%
pivot_longer(-Depth,names_to = "Date",values_to = "sim")%>%
mutate(Date=as.Date(Date,format="%Y-%m-%d"))%>%
right_join(.,obs,by=c("Date","Depth"))
colnames(temp.both)[4]<-"obs"
#---
# 3.report two objective functions' value and scatter plot sim vs. obs
#---
print(NSE(temp.both$sim,obs=temp.both$obs))   #NSE
print(sqrt(mean((temp.both$sim-temp.both$obs)^2,na.rm = TRUE)))  # RMSE
temp.both%>%
ggplot(aes(x=obs,y=sim,colour=Depth))+
geom_point()+
geom_abline(color="red")+
scale_color_gradientn(colors = brewer.pal(11, "Spectral"), name = "Depth")+
xlab("Observed")+
ylab("Simulated")+
theme_classic()+
ggsave(filename = file_name,height = height,width = width)
}
#---
# scatter plot
#---
scatter.plot(sim=temp.interpolated,
obs=obs.temp,
sim.start="2002-01-23",
sim.end="2016-12-31",
plot.start = "2002-01-23",
plot.end="2012-12-31",
file_name = "../R figures/scatter plot_temp.png",
min.depth = 0,
max.depth = 33,
by.value = 0.5,
height = 4,
width = 7)
scatter.plot<-function(sim=temp.interpolated,
obs=obs.temp,
sim.start="2017-06-06",
sim.end="2020-02-29",
plot.start="2017-06-06",
plot.end="2020-02-29",
file_name,
min.depth=0,max.depth,by.value,
height=4,
width=7){
#---
# 1. simulation period
#---
sim.date<-seq.Date(from = as.Date(start.date,format="%Y-%m-%d"),
to = as.Date(end.date,format="%Y-%m-%d"),
by="day")
#---
# 2. combine sim with obs by Date and Depth
#---
sim.temp<-as.data.frame(sim)
colnames(sim.temp)<-sim.date
sim.temp$Depth<-seq(min.depth,max.depth,by=by.value)
temp.both<-sim.temp%>%
pivot_longer(-Depth,names_to = "Date",values_to = "sim")%>%
mutate(Date=as.Date(Date,format="%Y-%m-%d"))%>%
right_join(.,obs,by=c("Date","Depth"))%>%
filter(Date>=plot.start&Date<=plot.end)
colnames(temp.both)[4]<-"obs"
#---
# 3.report two objective functions' value and scatter plot sim vs. obs
#---
print(NSE(temp.both$sim,obs=temp.both$obs))   #NSE
print(sqrt(mean((temp.both$sim-temp.both$obs)^2,na.rm = TRUE)))  # RMSE
temp.both%>%
ggplot(aes(x=obs,y=sim,colour=Depth))+
geom_point()+
geom_abline(color="red")+
scale_color_gradientn(colors = brewer.pal(11, "Spectral"), name = "Depth")+
xlab("Observed")+
ylab("Simulated")+
theme_classic()+
ggsave(filename = file_name,height = height,width = width)
}
#---
# scatter plot
#---
scatter.plot(sim=temp.interpolated,
obs=obs.temp,
sim.start="2002-01-23",
sim.end="2016-12-31",
plot.start = "2002-01-23",
plot.end="2012-12-31",
file_name = "../R figures/scatter plot_temp.png",
min.depth = 0,
max.depth = 33,
by.value = 0.5,
height = 4,
width = 7)
sim=temp.interpolated
obs=obs.temp
sim.start="2002-01-23"
sim.end="2016-12-31"
plot.start = "2002-01-23"
plot.end="2012-12-31"
file_name = "../R figures/scatter plot_temp.png"
min.depth = 0
max.depth = 33
by.value = 0.5
height = 4
width = 7
#---
# 1. simulation period
#---
sim.date<-seq.Date(from = as.Date(start.date,format="%Y-%m-%d"),
to = as.Date(end.date,format="%Y-%m-%d"),
by="day")
end.date
scatter.plot<-function(sim=temp.interpolated,
obs=obs.temp,
sim.start="2017-06-06",
sim.end="2020-02-29",
plot.start="2017-06-06",
plot.end="2020-02-29",
file_name,
min.depth=0,max.depth,by.value,
height=4,
width=7){
#---
# 1. simulation period
#---
sim.date<-seq.Date(from = as.Date(sim.start,format="%Y-%m-%d"),
to = as.Date(sim.end,format="%Y-%m-%d"),
by="day")
#---
# 2. combine sim with obs by Date and Depth
#---
sim.temp<-as.data.frame(sim)
colnames(sim.temp)<-sim.date
sim.temp$Depth<-seq(min.depth,max.depth,by=by.value)
temp.both<-sim.temp%>%
pivot_longer(-Depth,names_to = "Date",values_to = "sim")%>%
mutate(Date=as.Date(Date,format="%Y-%m-%d"))%>%
right_join(.,obs,by=c("Date","Depth"))%>%
filter(Date>=plot.start&Date<=plot.end)
colnames(temp.both)[4]<-"obs"
#---
# 3.report two objective functions' value and scatter plot sim vs. obs
#---
print(NSE(temp.both$sim,obs=temp.both$obs))   #NSE
print(sqrt(mean((temp.both$sim-temp.both$obs)^2,na.rm = TRUE)))  # RMSE
temp.both%>%
ggplot(aes(x=obs,y=sim,colour=Depth))+
geom_point()+
geom_abline(color="red")+
scale_color_gradientn(colors = brewer.pal(11, "Spectral"), name = "Depth")+
xlab("Observed")+
ylab("Simulated")+
theme_classic()+
ggsave(filename = file_name,height = height,width = width)
}
#---
# scatter plot
#---
scatter.plot(sim=temp.interpolated,
obs=obs.temp,
sim.start="2002-01-23",
sim.end="2016-12-31",
plot.start = "2002-01-23",
plot.end="2012-12-31",
file_name = "../R figures/scatter plot_temp.png",
min.depth = 0,
max.depth = 33,
by.value = 0.5,
height = 4,
width = 7)
scatter.plot<-function(sim=temp.interpolated,
obs=obs.temp,
sim.start="2017-06-06",
sim.end="2020-02-29",
plot.start="2017-06-06",
plot.end="2020-02-29",
file_name,
min.depth=0,max.depth,by.value,
height=4,
width=7){
#---
# 1. simulation period
#---
sim.date<-seq.Date(from = as.Date(sim.start,format="%Y-%m-%d"),
to = as.Date(sim.end,format="%Y-%m-%d"),
by="day")
#---
# 2. combine sim with obs by Date and Depth
#---
sim.temp<-as.data.frame(sim)
colnames(sim.temp)<-sim.date
sim.temp$Depth<-seq(min.depth,max.depth,by=by.value)
temp.both<-sim.temp%>%
pivot_longer(-Depth,names_to = "Date",values_to = "sim")%>%
mutate(Date=as.Date(Date,format="%Y-%m-%d"))%>%
right_join(.,obs,by=c("Date","Depth"))%>%
filter(Date>=plot.start&Date<=plot.end)
colnames(temp.both)[4]<-"obs"
#---
# 3.report two objective functions' value and scatter plot sim vs. obs
#---
print(NSE(temp.both$sim,obs=temp.both$obs))   #NSE
print(sqrt(mean((temp.both$sim-temp.both$obs)^2,na.rm = TRUE)))  # RMSE
temp.both%>%
ggplot(aes(x=obs,y=sim,colour=Depth))+
geom_point()+
geom_abline(color="red")+
scale_color_gradientn(colors = brewer.pal(11, "Spectral"), name = "Depth (m)")+
xlab("Observed")+
ylab("Simulated")+
theme_classic()+
ggsave(filename = file_name,height = height,width = width)
}
#---
# scatter plot
#---
scatter.plot(sim=temp.interpolated,
obs=obs.temp,
sim.start="2002-01-23",
sim.end="2016-12-31",
plot.start = "2002-01-23",
plot.end="2012-12-31",
file_name = "../R figures/scatter plot_temp.png",
min.depth = 0,
max.depth = 33,
by.value = 0.5,
height = 4,
width = 7)
devtools::load_all("../../../R scripts/dycdtool3/")
# DYCD temperature simulations using the optimal set of the three parameters
var.values<-extract.output(dycd.output = "../../../Sim_DYCD/191018-Okaraka_SY/DYsim.nc",
var.extract = c("TEMP"))
for(i in 1:length(var.values)){
expres<-paste0(names(var.values)[i],"<-data.frame(var.values[[",i,"]])")
eval(parse(text=expres))
}
# interpolation of temperature across water column at an intervals of 0.5m
temp.interpolated<-interpol(layerHeights = dyresmLAYER_HTS_Var,
var = dyresmTEMPTURE_Var,
min.dept = 0,max.dept = 33,by.value = 0.5)
#---
# Read in obs wq data
#---
obs.okareka<-read.csv("../R data/Obs data_tempolate.csv")
library(lubridate)
is.Date(obs.okareka$Date)
obs.okareka$Date<-as.Date(obs.okareka$Date,format="%d/%m/%Y")
obs.temp<-obs.okareka[,c(1,2,3)]
#---
# contour plot
#---
contour.plot(sim = temp.interpolated,
obs = obs.temp,
file_name = paste0("../R figures/contour_temp.png"),
start.date="2002-01-01",
end.date="2016-12-31",
legend.title = "T\n(\u00B0C)",
min.depth = 0,
max.depth = 33,
by.value = 0.5)
